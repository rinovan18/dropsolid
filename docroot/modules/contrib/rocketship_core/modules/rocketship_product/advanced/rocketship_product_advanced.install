<?php

/**
 * @file
 * Install file.
 */

use Drupal\taxonomy\Entity\Vocabulary;
use Drupal\field\Entity\FieldStorageConfig;
use Drupal\field\Entity\FieldConfig;
use Drupal\views\Entity\View;
use Drupal\search_api\Entity\Index;

/**
 * Implements hook_install().
 */
function rocketship_product_advanced_install() {
  Rocketship::updateRolePermissionsForModule('rocketship_product_advanced');

  // Load and resave the rewritten search index so it triggers
  // database updates and what not.
  $index = Index::load('content_index');
  if ($index) {
    $index->save();
  }

  // Grab the overview node, add the blocks to the sidebar in the overview paragraph
  $data = [
    0 => [
      'plugin_id' => 'facet_block:product_categories',
      'settings' => [
        'id' => 'facet_block:product_categories',
        'label' => 'Categories',
        'provider' => 'facets',
        'label_display' => 'visible',
      ],
    ],
    1 => [
      'plugin_id' => 'facet_block:property_one',
      'settings' => [
        'id' => 'facet_block:property_one',
        'label' => 'Property One',
        'provider' => 'facets',
        'label_display' => 'visible',
      ],
    ],
    2 => [
      'plugin_id' => 'facet_block:property_two',
      'settings' => [
        'id' => 'facet_block:property_two',
        'label' => 'Property Two',
        'provider' => 'facets',
        'label_display' => 'visible',
      ],
    ],
  ];
  $uuid = '6622ed2a-8882-4b24-a9c1-736c27045dbb';
  $nodes = \Drupal::entityTypeManager()
    ->getStorage('node')
    ->loadByProperties(['uuid' => $uuid]);
  if ($nodes) {
    $node = reset($nodes);
    /** @var \Drupal\paragraphs\ParagraphInterface[] $paragraphs */
    $paragraphs = $node->get('field_paragraphs')->referencedEntities();
    foreach ($paragraphs as $paragraph) {
      if ($paragraph->bundle() === 'overview') {
        $paragraph->set('field_overview_sidebar_blocks', $data);
        $paragraph->save();
      }
    }
    $node->save();
  }
}

/**
 * Implements hook_uninstall().
 */
function rocketship_product_advanced_uninstall() {

  // Deleting view.
  $view = View::load('related_product');
  if ($view) {
    $view->delete();
  }

  // Deleting field.
  $field = FieldConfig::loadByName('node', 'product', 'field_product_related_products');
  if ($field) {
    $field->delete();
  }
  $field = FieldConfig::loadByName('node', 'product', 'field_product_category');
  if ($field) {
    $field->delete();
  }
  $field = FieldConfig::loadByName('node', 'product', 'field_product_property_one');
  if ($field) {
    $field->delete();
  }
  $field = FieldConfig::loadByName('node', 'product', 'field_product_property_two');
  if ($field) {
    $field->delete();
  }

  // Deleting field storage.
  $storage = FieldStorageConfig::loadByName('node', 'field_product_related_products');
  if ($storage) {
    $storage->delete();
  }
  $storage = FieldStorageConfig::loadByName('node', 'field_product_category');
  if ($storage) {
    $storage->delete();
  }
  $storage = FieldStorageConfig::loadByName('node', 'field_product_property_one');
  if ($storage) {
    $storage->delete();
  }
  $storage = FieldStorageConfig::loadByName('node', 'field_product_property_two');
  if ($storage) {
    $storage->delete();
  }

  $vids = [
    'product_category',
    'product_property_one',
    'product_property_two',
  ];

  foreach ($vids as $vid) {
    // Deleting all terms.
    $tids = \Drupal::entityQuery('taxonomy_term')
      ->condition('vid', $vid)
      ->execute();

    if (!empty($tids)) {
      $controller = \Drupal::entityTypeManager()->getStorage('taxonomy_term');
      $entities = $controller->loadMultiple($tids);
      $controller->delete($entities);
    }

    // Deleting vocabulary.
    $vocabulary = Vocabulary::load($vid);
    if ($vocabulary) {
      $vocabulary->delete();
    }
  }

  $configs = [
    'responsive_image.styles.product_related',
    'facets.facet.property_one',
    'facets.facet.property_two',
    'facets.facet.product_categories',
    'rabbit_hole.behavior_settings.taxonomy_vocabulary_product_category',
    'rabbit_hole.behavior_settings.taxonomy_vocabulary_product_property_one',
    'rabbit_hole.behavior_settings.taxonomy_vocabulary_product_property_two',
    'facets.facet_source.search_api__views_block__product_overview__product_overview_block',
    'language.content_settings.taxonomy_term.product_category',
    'language.content_settings.taxonomy_term.product_property_one',
    'language.content_settings.taxonomy_term.product_property_two',
  ];

  foreach ($configs as $config) {
    $c = \Drupal::configFactory()->getEditable($config);
    if ($c) {
      $c->delete();
    }
  }
}
