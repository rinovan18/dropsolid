<?php

/**
 * @file
 * Install file.
 */

use Drupal\taxonomy\Entity\Vocabulary;
use Drupal\field\Entity\FieldStorageConfig;
use Drupal\field\Entity\FieldConfig;
use Drupal\views\Entity\View;
use Drupal\search_api\Entity\Index;

/**
 * Implements hook_install().
 */
function rocketship_job_advanced_install() {
  try {
    Rocketship::updateRolePermissionsForModule('rocketship_job_advanced');

    // Load and resave the rewritten search index so it triggers
    // database updates and what not.
    $index = Index::load('content_index');
    if ($index) {
      $index->save();
    }
  }
  catch (\Exception $e) {
    \Drupal::messenger()->addMessage($e->getMessage(), 'error');
  }
}

/**
 * Implements hook_uninstall().
 */
function rocketship_job_advanced_uninstall() {
  try {
    // Deleting view.
    $view = View::load('job_applications');
    if ($view) {
      $view->delete();
    }

    // Deleting field.
    $field = FieldConfig::loadByName('node', 'job', 'field_job_property_one');
    if ($field) {
      $field->delete();
    }
    $field = FieldConfig::loadByName('node', 'job', 'field_job_category');
    if ($field) {
      $field->delete();
    }
    $field = FieldConfig::loadByName('node', 'job', 'field_job_property_two');
    if ($field) {
      $field->delete();
    }

    // Deleting field storage.
    $storage = FieldStorageConfig::loadByName('node', 'field_job_property_one');
    if ($storage) {
      $storage->delete();
    }
    $storage = FieldStorageConfig::loadByName('node', 'field_job_category');
    if ($storage) {
      $storage->delete();
    }
    $storage = FieldStorageConfig::loadByName('node', 'field_job_property_two');
    if ($storage) {
      $storage->delete();
    }

    $vids = [
      'job_property_one',
      'job_category',
      'job_property_two',
    ];

    foreach ($vids as $vid) {
      // Deleting all terms.
      $tids = \Drupal::entityQuery('taxonomy_term')
        ->condition('vid', $vid)
        ->execute();

      if (!empty($tids)) {
        $controller = \Drupal::entityTypeManager()->getStorage('taxonomy_term');
        $entities = $controller->loadMultiple($tids);
        $controller->delete($entities);
      }

      // Deleting vocabulary.
      $vocabulary = Vocabulary::load($vid);
      if ($vocabulary) {
        $vocabulary->delete();
      }
    }

    $configs = [
      'rabbit_hole.behavior_settings.taxonomy_vocabulary_job_category',
      'rabbit_hole.behavior_settings.taxonomy_vocabulary_job_property_one',
      'rabbit_hole.behavior_settings.taxonomy_vocabulary_job_property_two',
      'language.content_settings.taxonomy_term.job_category',
      'language.content_settings.taxonomy_term.job_property_one',
      'language.content_settings.taxonomy_term.job_property_two',
    ];

    foreach ($configs as $config) {
      $c = \Drupal::configFactory()->getEditable($config);
      if ($c) {
        $c->delete();
      }
    }
  }
  catch (\Exception $e) {
    \Drupal::messenger()->addMessage($e->getMessage(), 'error');
  }
}
