<?php

/**
 * @file
 * Install file.
 */

use Drupal\taxonomy\Entity\Vocabulary;
use Drupal\field\Entity\FieldStorageConfig;
use Drupal\field\Entity\FieldConfig;
use Drupal\views\Entity\View;
use Drupal\search_api\Entity\Index;

/**
 * Implements hook_install().
 */
function rocketship_news_advanced_install() {
  Rocketship::updateRolePermissionsForModule('rocketship_news_advanced');

  // Load and resave the rewritten search index so it triggers
  // database updates and what not.
  $index = Index::load('content_index');
  if ($index) {
    $index->save();
  }
}

/**
 * Implements hook_uninstall().
 */
function rocketship_news_advanced_uninstall() {
  $vid = 'news_tags';

  // Deleting view.
  $view = View::load('news_overview');
  if ($view) {
    $view->delete();
  }

  // Deleting field.
  $field = FieldConfig::loadByName('node', 'news', 'field_news_tags');
  if ($field) {
    $field->delete();
  }

  // Deleting field storage.
  $storage = FieldStorageConfig::loadByName('node', 'field_news_tags');
  if ($storage) {
    $storage->delete();
  }

  // Deleting all terms.
  $tids = \Drupal::entityQuery('taxonomy_term')
    ->condition('vid', $vid)
    ->execute();

  if (!empty($tids)) {
    $controller = \Drupal::entityTypeManager()->getStorage('taxonomy_term');
    $entities = $controller->loadMultiple($tids);
    $controller->delete($entities);
  }

  // Deleting vocabulary.
  $vocabulary = Vocabulary::load($vid);
  if ($vocabulary) {
    $vocabulary->delete();
  }
}
